dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{	
	assembly("ForNav.Reports.6.0.0.2078")
	{
		type(ForNav.Report_6_0_0_2078; ForNavReport6188684_v6_0_0_2078){}   
	}
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 6188684 "ForNAV Label Sheets"
{
	Caption = 'Label Sheets';
	UsageCategory = ReportsAndAnalysis;
	RDLCLayout = './Layouts/ForNAV Label Sheets.rdlc'; DefaultLayout = RDLC;

	dataset
	{
		dataitem(Args;"ForNAV Label Sheet Args.")
		{
			DataItemTableView = sorting("Table ID");
			UseTemporary = true;
			column(ReportForNavId_1; 1) {} // Autogenerated by ForNav - Do not delete
			dataitem(LabelSheet;"ForNAV Label Sheet")
			{
				DataItemTableView = sorting("Row No.");
				UseTemporary = true;
				column(ReportForNavId_2; 2) {} // Autogenerated by ForNav - Do not delete
				trigger OnPreDataItem();
				begin
				end;
				
			}
			trigger OnPreDataItem();
			begin
				Insert;
				LabelSheet.FindFirst;
			end;
			
		}
	}

	requestpage
	{

		SaveValues = true;

		layout
		{
			area(content)
			{
				group(Options)
				{
					Caption = 'Options';
					field(TableName; Args."Table Name")
					{
						ApplicationArea = All;
						Caption = 'Table Name';
						Editable = false;
						TableRelation = AllObjWithCaption."Object Caption" where("Object Type" = filter(Table));

						trigger OnAssistEdit()
						begin
							Args.ShowFilteredTableList;
						end;

						trigger OnLookup(var Text: Text): Boolean
						begin
							Args.ShowFilteredTableList;
						end;
					}
					field(NoOfLabels; Args."No. of Labels")
					{
						ApplicationArea = All;
						Caption = 'No. of Labels';
						MaxValue = 9;
						MinValue = 1;
					}
					field(TableID; Args."Table ID")
					{
						ApplicationArea = All;
						Visible = false;
					}
					field(ForNavOpenDesigner; ReportForNavOpenDesigner)
					{
						ApplicationArea = All;
						Caption = 'Design';
						Visible = ReportForNavAllowDesign;
						trigger OnValidate()
						begin
							ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
							CurrReport.RequestOptionsPage.Close();
						end;
					}
				}
			}
		}

		actions
		{
		}

		trigger OnOpenPage()
		begin
			ReportForNavOpenDesigner := false;
			SetInitValues;
		end;
	}

	trigger OnInitReport()
	begin
		;ReportsForNavInit;
	end;

	trigger OnPostReport()
	begin

		;ReportForNav.Post;

	end;

	trigger OnPreReport()
	var
		GetLabelSheet: Codeunit "ForNAV Get Label Sheet";
	begin
		if not ReportForNavOpenDesigner then
			GetLabelSheet.GetLabels(Args, LabelSheet);
		;

		;ReportsForNavPre;

	end;

	local procedure SetInitValues()
	var
		AllObjWithCaption: Record AllObjWithCaption;
	begin
		if Args."No. of Labels" = 0 then
			Args."No. of Labels" := 2;
		if Args."Table ID" = 0 then begin
			Args."Table ID" := 27;
			AllObjWithCaption.SetRange("Object ID", Args."Table ID");
			AllObjWithCaption.SetRange("Object Type", AllObjWithCaption."object type"::Table);
			AllObjWithCaption.FindFirst;
			Args."Table Name" := AllObjWithCaption."Object Caption";
		end;
	end;

	// --> Reports ForNAV Autogenerated code - do not delete or modify
	var 
		[WithEvents]
		ReportForNav : DotNet ForNavReport6188684_v6_0_0_2078;
		ReportForNavOpenDesigner : Boolean;
		[InDataSet]
		ReportForNavAllowDesign : Boolean;

	local procedure ReportsForNavInit();
	var
		addInFileName : Text;
		tempAddInFileName : Text;
		path: DotNet Path;
		ApplicationSystemConstants: Codeunit "Application System Constants";
	begin
		addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_0_0_2078\ForNav.Reports.6.0.0.2078.dll';
		if not File.Exists(addInFileName) then begin
			tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.0.0.2078.dll';
			if not File.Exists(tempAddInFileName) then
				Error('Please install the ForNAV DLL version 6.0.0.2078 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
		end;
		ReportForNav:= ReportForNav.Report_6_0_0_2078(CurrReport.ObjectId(), CurrReport.Language(), SerialNumber(), UserId(), CompanyName());
		ReportForNav.Init();
	end;

	local procedure ReportsForNavPre();
	begin
		ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;
		if not ReportForNav.Pre() then CurrReport.Quit();
	end;

	// Reports ForNAV Autogenerated code - do not delete or modify -->
}
